syntax = "proto3";
package TalkService;
option go_package = ".;TalkService";

message Empty {}

service TalkService {
  rpc updateProfileAttributes (updateProfileAttributesRequest) returns (updateProfileAttributesResponse);
  rpc getProfile (Empty) returns (Profile);


  rpc sendMessage(sendMessageRequest) returns (sendMessageResponse);
  rpc editMessage(editMessageRequest) returns (editMessageResponse);
  rpc resendMessage(resendMessageRequest) returns (resendMessageResponse);
  rpc unsendMessage (unsendMessageRequest) returns (unsendMessageResponse);
  rpc readMessage (readMessageRequest) returns (readMessageResponse);
  rpc unreadMessage (unreadMessageRequest) returns (unreadMessageResponse);
  rpc reportMessage (reportMessageRequest) returns (reportMessageResponse);
  rpc removeAllMessages (removeAllMessagesRequest) returns (removeAllMessagesResponse);
  rpc actionMessage (actionMessageRequest) returns (actionMessageResponse);
  rpc announceMessage (announceMessageRequest) returns (announceMessageResponse);

  rpc getSetting (Empty) returns (Setting);
  rpc updateSettingAttributes(updateSettingAttributesRequest) returns (updateSettingAttributesResponse);

  rpc getContacts (getContactsRequest) returns (getContactsResponse);
  rpc updateContact (updateContactRequest) returns (updateContactResponse);

  rpc getTag (getTagRequest) returns (getTagResponse);
  rpc createTag (createTagRequest) returns (createTagResponse);
  rpc updateTag (updateTagRequest) returns (updateTagResponse);
  rpc registerTags (registerTagsRequest) returns (registerTagsResponse);
  rpc getAllTags (Empty) returns (getAllTagsResponse);
  rpc deleteTag (deleteTagRequest) returns (deleteTagResponse);

  rpc addFriend (addFriendRequest) returns (addFriendResponse);
  rpc deleteFriends (deleteFriendsRequest) returns (deleteFriendsResponse);
  rpc blockFriends (blockFriendsRequest) returns (blockFriendsResponse);
  rpc unblockFriends (unblockFriendsRequest) returns (unblockFriendsResponse);
  rpc addFriendsToFavorite (addFriendsToFavoriteRequest) returns (addFriendsToFavoriteResponse);
  rpc removeFriendsFromFavorite (removeFriendsFromFavoriteRequest) returns (removeFriendsFromFavoriteResponse);
}


enum ProfileKey {
  DISPLAY_NAME = 0;
  BIO = 1;
  ICON_PATH = 2;
  COVER_PATH = 3;
  TWITTER_ID = 4;
  INSTAGRAM_ID = 5;
  GITHUB_ID = 6;
  WEB_SITE_URL = 7;
  LOCATION = 8;
  BIRTH_DAY = 9;
  STATUS = 10;
}

message Profile {
  string mid  = 1;
  string displayName = 2;
  string bio = 3;
  string iconPath = 4;
  string coverPath = 5;
  string twitterID = 6;
  string instagramID = 7;
  string githubID = 8;
  string webSiteURL = 9;
  string location = 10;
  int64 birthDay = 11;
  string status = 12;
}

message updateProfileAttributesRequest {
  repeated ProfileKey keys = 1;
  Profile profile = 2;
}
message updateProfileAttributesResponse {}

enum ToType {
  USER = 0;
  ROOM = 1;
  GROUP = 2;
  CHAT = 3;
}

enum ContentType {
  TEXT = 0;
  IMAGE = 1;
  VIDEO = 2;
  AUDIO = 3;
  STICKER = 4;
}

message Message {
  string from_ = 1;
  string to = 2;
  ToType toType = 3;
  string messageID = 4;
  int64 createdTime = 5;
  string text = 6;
  map<string, string> contentMetadata = 7;
  ContentType contentType = 8;
  string relatedMessageId = 9;
}

message sendMessageRequest {
  Message message = 1;
}
message sendMessageResponse {
  string messageID = 1;
}

message editMessageRequest {
  string messageID = 1;
  Message message = 2;
}
message editMessageResponse {
  Message message = 1;
}

message resendMessageRequest {}
message resendMessageResponse {}

message unsendMessageRequest {
  string messageID = 1;
}
message unsendMessageResponse {}

message readMessageRequest {
  string messageID = 1;
}
message readMessageResponse {}

message unreadMessageRequest {
  string messageID = 1;
}
message unreadMessageResponse {}

message reportMessageRequest {
  string messageID = 1;
  map<string, string> metaData = 2;
}
message reportMessageResponse {}

message removeAllMessagesRequest {
  string messageID = 1;
}
message removeAllMessagesResponse {}

enum MessageAction {
  GOOD = 0;
}

message actionMessageRequest {
  string messageID = 1;
  MessageAction actionType = 2;
}
message actionMessageResponse {}

message announceMessageRequest {
  string messageID = 1;
  string text = 2;
}
message announceMessageResponse {}

message Setting {
  string privateUserID = 1;
  string email = 2;
  string userTicket = 3;

  bool allowSearchByPrivateUserID = 4;
  bool allowSearchByEmail = 5;
  bool allowSearchByUserTicket = 6;
}

message updateSettingAttributesRequest {}
message updateSettingAttributesResponse {}

enum ContactStatus {
  NO_RELATION = 0;
  FRIEND = 1;
  BLOCKED = 2;
  DELETED = 3;
}

message Contact {
  string mid = 1;
  string displayName = 2;
  string overWrittenName = 3;
  string bio = 4;
  string iconPath= 5;
  string coverPath = 6;
  string twitterID = 7;
  string instagramID = 8;
  string githubID = 9;
  string webSiteURL = 10;
  string location = 11;
  int64 birthDay = 12;
  string status = 13;
  ContactStatus contactStatus = 14;
}

message getContactsRequest {
  repeated string mids = 1;
}
message getContactsResponse {
  map<string, Contact> contacts = 1;
}

enum ContactKey {
  OVER_WRITTEN_NAME = 0;
}

message updateContactRequest {
  repeated ContactKey keys = 1;
  Contact contact = 2;
}
message updateContactResponse {}

message Tag {
  string tagID = 1;
  string name = 2;
  string description = 3;
  string color = 4;
  string creator = 5;
  string createdTime = 6;
}

message getTagRequest {
  string tagId = 1;
}
message getTagResponse {
  Tag tag = 1;
}

message createTagRequest {
  Tag tag = 1;
}
message createTagResponse {
  string tagID = 1;
}

message updateTagRequest {
  Tag tag = 1;
}
message updateTagResponse {}

message registerTagsRequest {
  string tagID = 1;
  string mid = 2;
}
message registerTagsResponse {}

message getAllTagsResponse {
  repeated string tagIds = 1;
}

message deleteTagRequest {
  string tagId = 1;
}
message deleteTagResponse {}

message addFriendRequest {
  string mid = 1;
}
message addFriendResponse {}

message deleteFriendsRequest {
  string mid = 1;
}
message deleteFriendsResponse {}

message blockFriendsRequest {
  string mid = 1;
}
message blockFriendsResponse {}

message unblockFriendsRequest {
  string mid = 1;
}
message unblockFriendsResponse {}

message addFriendsToFavoriteRequest {
  string mid = 1;
}
message addFriendsToFavoriteResponse {}

message removeFriendsFromFavoriteRequest {
  string mid = 1;
}
message removeFriendsFromFavoriteResponse {}
